# 必选，API 的版本号
apiVersion: v1
# 必选，类型
kind: Pod
# 必选，元数据
metadata:
  # 必选，符合 RFC 1035 规范的 Pod 名称
  name: nginx-demo
  # 可选，Pod 所在的命名空间，不指定默认为 default
  namespace: default
  # 可选，标签，一般用于 Selector
  labels:
    app: nginx
  # 可选，注释，常用于记录信息，说明相关的内容
  annotations:
    author: Dylan
    version: v1.0
# 必选，用于定义容器的详细信息 
spec:
  # 可选，容器重启策略，默认为 Always
  restartPolicy: Always
  # 可选，共享存储卷列表
  volumes:
    # 可选，共享卷类型，空
    - name: v-emptydir
      emptyDir: {}
    # 可选，共享卷类型，本机目录
    - name: v-hostpath  
      hostPath:
        path: /opt
    # 可选，downwardAPI
    - name: v-downwardapi
      downwardAPI:
        items:
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
          - path: memory
            resourceFieldRef:
              # 需要指定容器
              containerName: nginx
              resource: limits.memory

  # 可选，初始化容器
  initContainers:
    - name: busybox
      image: busybox
      command: [/bin/sh, -c, "echo 'Hello World' > /opt/index.html"]
      volumeMounts:
        - name: v-hostpath
          mountPath: /opt

  # 必选，容器列表
  containers:
    # 必选，符合 RFC 1035 规范的容器名称
    - name: nginx
      # 必选，容器所用的镜像的地址
      image: nginx:1.7.9
      # 可选，镜像拉取策略，支持 Alway，IfNotPresent，Never
      imagePullPolicy: IfNotPresent
      # 可选，容器启动执行的命令，也可以使用 args
      command:
        - nginx  
        - -g
        - "daemon off;"
      # 可选，容器的工作目录  
      workingDir: /usr/share/nginx/html
      # 可选，存储卷配置
      volumeMounts:
        # 存储卷名称
        - name: v-hostpath
          # 挂载目录
          mountPath: /usr/share/nginx/html
          # 只读
          readOnly: true
        # 挂载 Downward API
        - name: v-downwardapi
          mountPath: /tmp/downwardapi
      # 可选，容器需要暴露的端口号列表    
      ports:
        # 端口名称
        - name: http-port
          # 端口号
          containerPort: 80
          # 端口协议，默认TCP
          protocol: TCP
      # 可选，环境变量配置    
      env:
        # 变量名
        - name: TZ
          value: Asia/Shanghai
        - name: LANG
          value: zh_CN.utf8
        # Downward API 环境变量配置方式
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_APP
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_MEMORY
          valueFrom:
            resourceFieldRef:
              containerName: nginx
              resource: limits.memory
      # 可选，资源限制和资源请求限制
      resources:
        # 最大限制设置
        limits:
          cpu: 1000m
          memory: 1024Mi
        # 启动所需的资源  
        requests:
          cpu: 100m
          memory: 512Mi
      # 可选，就绪状态检查    
      readinessProbe:
        # HTTP 检测方式
        httpGet:
          # 检查协议
          scheme: HTTP
          # 检查端口
          port: 80
          # 检查路径
          path: /
          # 请求头
          httpHeaders:
            - name: REQ-USER
              value: root
      # 可选，存活状态检查
      livenessProbe:
        # exec 检测方式，只能一种
        exec:
          command: 
            - cat
            - /health
        # 端口检测方式  
        # tcpSocket:
        #   port: 80
        # 初始化时间  
        initialDelaySeconds: 60
        # 超时时间
        timeoutSeconds: 2
        # 检测间隔
        periodSeconds: 5
        # 检查成功为1次表示成功
        successThreshold: 1
        # 检测失败3次表示失败
        failureThreshold: 3